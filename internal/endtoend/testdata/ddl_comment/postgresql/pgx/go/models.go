// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package querytest

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

// Enum comment
type FooBat string

const (
	FooBatBat FooBat = "bat"
)

func (e *FooBat) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = FooBat(s)
	case string:
		*e = FooBat(s)
	default:
		return fmt.Errorf("unsupported scan type for FooBat: %T", src)
	}
	return nil
}

// NullFooBat is the nullable version of FooBat.
type NullFooBat struct {
	FooBat FooBat
	Valid  bool
}

func (e *NullFooBat) Scan(src interface{}) error {
	if src == nil {
		e.Valid = false
		return nil
	}
	switch s := src.(type) {
	case []byte:
		e.FooBat = FooBat(s)
	case string:
		e.FooBat = FooBat(s)
	default:
		return fmt.Errorf("unsupported scan type for NullFooBat: %T", src)
	}
	e.Valid = len(e.FooBat) > 0
	return nil
}

func (e *NullFooBat) Value() (driver.Value, error) {
	if !e.Valid {
		return nil, nil
	}
	return string(e.FooBat), nil
}

// Table comment
type FooBar struct {
	// Column comment
	Baz sql.NullString
}

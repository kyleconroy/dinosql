// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package querytest

import (
	"database/sql/driver"
	"fmt"
)

type AuthorsStatus string

const (
	AuthorsStatusInit       AuthorsStatus = "init"
	AuthorsStatusDone       AuthorsStatus = "done"
	AuthorsStatusCanceled   AuthorsStatus = "canceled"
	AuthorsStatusProcessing AuthorsStatus = "processing"
	AuthorsStatusWaiting    AuthorsStatus = "waiting"
)

func (e *AuthorsStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AuthorsStatus(s)
	case string:
		*e = AuthorsStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for AuthorsStatus: %T", src)
	}
	return nil
}

type NullAuthorsStatus struct {
	AuthorsStatus AuthorsStatus
	Valid         bool // Valid is true if AuthorsStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAuthorsStatus) Scan(value interface{}) error {
	if value == nil {
		ns.AuthorsStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AuthorsStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAuthorsStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AuthorsStatus), nil
}

type Author struct {
	ID     int64
	Status AuthorsStatus
}

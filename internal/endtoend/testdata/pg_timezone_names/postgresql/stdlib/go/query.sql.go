// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: query.sql

package querytest

import (
	"context"
	"database/sql"
)

const getTimezones = `-- name: GetTimezones :many
SELECT is_dst, name, utc_offset, abbrev from pg_catalog.pg_timezone_names
`

type GetTimezonesRow struct {
	IsDst     sql.NullBool
	Name      sql.NullString
	UtcOffset sql.NullInt64
	Abbrev    sql.NullString
}

func (q *Queries) GetTimezones(ctx context.Context) ([]GetTimezonesRow, error) {
	rows, err := q.db.QueryContext(ctx, getTimezones)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetTimezonesRow
	for rows.Next() {
		var i GetTimezonesRow
		if err := rows.Scan(
			&i.IsDst,
			&i.Name,
			&i.UtcOffset,
			&i.Abbrev,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

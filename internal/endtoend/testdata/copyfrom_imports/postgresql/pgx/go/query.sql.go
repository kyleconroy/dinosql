// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: query.sql

package querytest

import (
	"context"
	"database/sql"

	"github.com/jackc/pgconn"
)

const deleteValues = `-- name: DeleteValues :execresult
DELETE
FROM myschema.foo
`

func (q *Queries) DeleteValues(ctx context.Context) (pgconn.CommandTag, error) {
	ctx, done := q.observer(ctx, "DeleteValues")
	tag, err := q.db.Exec(ctx, deleteValues)
	return tag, done(err)
}

const insertSingleValue = `-- name: InsertSingleValue :exec
INSERT INTO myschema.foo (a) VALUES ($1)
`

func (q *Queries) InsertSingleValue(ctx context.Context, a sql.NullString) error {
	ctx, done := q.observer(ctx, "InsertSingleValue")
	_, err := q.db.Exec(ctx, insertSingleValue, a)
	return done(err)
}

type InsertValuesParams struct {
	A sql.NullString
	B sql.NullInt32
}

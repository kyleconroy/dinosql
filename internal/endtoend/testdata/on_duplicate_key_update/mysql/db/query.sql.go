// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: query.sql

package db

import (
	"context"
	"database/sql"
)

const upsertAuthor = `-- name: UpsertAuthor :exec
INSERT INTO authors (name, bio)
VALUES (?, ?)
ON DUPLICATE KEY
    UPDATE bio = ?
`

type UpsertAuthorParams struct {
	Name  string
	Bio   sql.NullString
	Bio_2 sql.NullString
}

func (q *Queries) UpsertAuthor(ctx context.Context, arg UpsertAuthorParams) error {
	ctx, done := q.observer(ctx, "UpsertAuthor")
	_, err := q.db.ExecContext(ctx, upsertAuthor, arg.Name, arg.Bio, arg.Bio_2)
	return done(err)
}

const upsertAuthorNamed = `-- name: UpsertAuthorNamed :exec
INSERT INTO authors (name, bio)
VALUES (?, ?)
ON DUPLICATE KEY
    UPDATE bio = ?
`

type UpsertAuthorNamedParams struct {
	Name string
	Bio  sql.NullString
}

func (q *Queries) UpsertAuthorNamed(ctx context.Context, arg UpsertAuthorNamedParams) error {
	ctx, done := q.observer(ctx, "UpsertAuthorNamed")
	_, err := q.db.ExecContext(ctx, upsertAuthorNamed, arg.Name, arg.Bio, arg.Bio)
	return done(err)
}

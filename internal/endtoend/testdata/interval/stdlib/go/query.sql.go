// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: query.sql

package querytest

import (
	"context"
)

const get = `-- name: Get :many
SELECT bar, "interval" FROM foo LIMIT $1
`

func (q *Queries) Get(ctx context.Context, limit int32) ([]Foo, error) {
	ctx, done := q.observer(ctx, "Get")
	rows, err := q.db.QueryContext(ctx, get, limit)
	if err != nil {
		return nil, done(err)
	}
	defer rows.Close()
	var items []Foo
	for rows.Next() {
		var i Foo
		if err := rows.Scan(&i.Bar, &i.Interval); err != nil {
			return nil, done(err)
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, done(err)
	}
	if err := rows.Err(); err != nil {
		return nil, done(err)
	}
	return items, done(nil)
}

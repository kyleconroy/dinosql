// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: query.sql

package querytest

import (
	"context"
)

const selectScoreSums = `-- name: SelectScoreSums :many
SELECT group_id, SUM(score) FROM foo GROUP BY group_id
`

type SelectScoreSumsRow struct {
	GroupID int32
	Sum     int64
}

func (q *Queries) SelectScoreSums(ctx context.Context) (map[int32]SelectScoreSumsRow, error) {
	rows, err := q.db.QueryContext(ctx, selectScoreSums)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := map[int32]SelectScoreSumsRow{}
	for rows.Next() {
		var i SelectScoreSumsRow
		if err := rows.Scan(&i.GroupID, &i.Sum); err != nil {
			return nil, err
		}
		items[i.GroupID] = i
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

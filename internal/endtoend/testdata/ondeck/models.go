// Code generated by sqlc. DO NOT EDIT.

package ondeck

import (
	"database/sql"
	"fmt"
	"time"
)

type Status string

const (
	StatusOpen   Status = "open"
	StatusClosed Status = "closed"
)

func (e *Status) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Status(s)
	case string:
		*e = Status(s)
	default:
		return fmt.Errorf("unsupported scan type for Status: %T", src)
	}
	return nil
}

type City struct {
	Slug string
	Name string
}

func (t *City) GetSlug() string {
	return t.Slug
}
func (t *City) GetName() string {
	return t.Name
}

type Venue struct {
	ID              int32
	CreateAt        time.Time
	Status          Status
	Slug            string
	Name            string
	City            string
	SpotifyPlaylist string
	SongkickID      sql.NullString
}

func (t *Venue) GetID() int32 {
	return t.ID
}
func (t *Venue) GetCreateAt() time.Time {
	return t.CreateAt
}
func (t *Venue) GetStatus() Status {
	return t.Status
}
func (t *Venue) GetSlug() string {
	return t.Slug
}
func (t *Venue) GetName() string {
	return t.Name
}
func (t *Venue) GetCity() string {
	return t.City
}
func (t *Venue) GetSpotifyPlaylist() string {
	return t.SpotifyPlaylist
}
func (t *Venue) GetSongkickID() sql.NullString {
	return t.SongkickID
}

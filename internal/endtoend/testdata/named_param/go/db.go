// Code generated by sqlc. DO NOT EDIT.

package querytest

import (
	"context"
	"database/sql"
)

type DBTX interface {
	ExecContext(context.Context, string, ...interface{}) (sql.Result, error)
	PrepareContext(context.Context, string) (*sql.Stmt, error)
	QueryContext(context.Context, string, ...interface{}) (*sql.Rows, error)
	QueryRowContext(context.Context, string, ...interface{}) *sql.Row
}

func New(db DBTX) *Queries {
	return &Queries{db: db}
}

type Queries struct {
	db DBTX
}

type Querier interface {
	AtParams(ctx context.Context, arg AtParamsParams) ([]string, error)
	FuncParams(ctx context.Context, arg FuncParamsParams) ([]string, error)
	InsertAtParams(ctx context.Context, arg InsertAtParamsParams) (string, error)
	InsertFuncParams(ctx context.Context, arg InsertFuncParamsParams) (string, error)
	Update(ctx context.Context, arg UpdateParams) (Foo, error)
	WithTx(*sql.Tx) Querier
}

var _ Querier = (*Queries)(nil)

func (q *Queries) WithTx(tx *sql.Tx) Querier {
	return &Queries{
		db: tx,
	}
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package querytest

import (
	"database/sql/driver"
	"fmt"
)

// this is the mood type
type FooMood string

const (
	FooMoodSad   FooMood = "sad"
	FooMoodOk    FooMood = "ok"
	FooMoodHappy FooMood = "happy"
)

func (e *FooMood) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = FooMood(s)
	case string:
		*e = FooMood(s)
	default:
		return fmt.Errorf("unsupported scan type for FooMood: %T", src)
	}
	return nil
}

// NullFooMood is the nullable version of FooMood.
type NullFooMood struct {
	FooMood FooMood
	Valid   bool
}

func (e *NullFooMood) Scan(src interface{}) error {
	if src == nil {
		e.Valid = false
		return nil
	}
	switch s := src.(type) {
	case []byte:
		e.FooMood = FooMood(s)
	case string:
		e.FooMood = FooMood(s)
	default:
		return fmt.Errorf("unsupported scan type for NullFooMood: %T", src)
	}
	e.Valid = len(e.FooMood) > 0
	return nil
}

func (e *NullFooMood) Value() (driver.Value, error) {
	if !e.Valid {
		return nil, nil
	}
	return string(e.FooMood), nil
}

// this is the bar table
type FooBar struct {
	// this is the baz column
	Baz string
}

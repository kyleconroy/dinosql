// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package querytest

import (
	"database/sql/driver"
	"fmt"
)

type IPProtocol string

const (
	IPProtocolTCP  IPProtocol = "tcp"
	IpProtocolIp   IPProtocol = "ip"
	IpProtocolIcmp IPProtocol = "icmp"
)

func (e *IPProtocol) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = IPProtocol(s)
	case string:
		*e = IPProtocol(s)
	default:
		return fmt.Errorf("unsupported scan type for IPProtocol: %T", src)
	}
	return nil
}

// NullIPProtocol is the nullable version of IPProtocol.
type NullIPProtocol struct {
	IPProtocol IPProtocol
	Valid      bool
}

func (e *NullIPProtocol) Scan(src interface{}) error {
	if src == nil {
		e.Valid = false
		return nil
	}
	switch s := src.(type) {
	case []byte:
		e.IPProtocol = IPProtocol(s)
	case string:
		e.IPProtocol = IPProtocol(s)
	default:
		return fmt.Errorf("unsupported scan type for NullIPProtocol: %T", src)
	}
	e.Valid = len(e.IPProtocol) > 0
	return nil
}

func (e *NullIPProtocol) Value() (driver.Value, error) {
	if !e.Valid {
		return nil, nil
	}
	return string(e.IPProtocol), nil
}

type BarNew struct {
	IDNew int32
	IpOld IPProtocol
}

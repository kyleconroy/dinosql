// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: query.sql

package querytest

import (
	"context"
)

const coldCities = `-- name: ColdCities :many
SELECT city
FROM weather
GROUP BY city
HAVING max(temp_lo) < $1
`

func (q *Queries) ColdCities(ctx context.Context, tempLo int32, aq ...AdditionalQuery) ([]string, error) {
	query := coldCities
	queryParams := []interface{}{tempLo}

	if len(aq) > 0 {
		query += " " + aq[0].SQL
		queryParams = append(queryParams, aq[0].Args...)
	}

	rows, err := q.db.QueryContext(ctx, query, queryParams...)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var city string
		if err := rows.Scan(&city); err != nil {
			return nil, err
		}
		items = append(items, city)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

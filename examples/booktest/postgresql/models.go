// Code generated by sqlc. DO NOT EDIT.

package booktest

import (
	"fmt"
	"time"
)

type BookType string

const (
	BookTypeFICTION    BookType = "FICTION"
	BookTypeNONFICTION BookType = "NONFICTION"
)

func (e *BookType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = BookType(s)
	case string:
		*e = BookType(s)
	default:
		return fmt.Errorf("unsupported scan type for BookType: %T", src)
	}
	return nil
}

type Author struct {
	AuthorID int32
	Name     string
}

func (t *Author) GetAuthorID() int32 {
	return t.AuthorID
}
func (t *Author) GetName() string {
	return t.Name
}

type Book struct {
	BookID    int32
	AuthorID  int32
	Isbn      string
	Booktype  BookType
	Title     string
	Year      int32
	Available time.Time
	Tags      []string
}

func (t *Book) GetBookID() int32 {
	return t.BookID
}
func (t *Book) GetAuthorID() int32 {
	return t.AuthorID
}
func (t *Book) GetIsbn() string {
	return t.Isbn
}
func (t *Book) GetBooktype() BookType {
	return t.Booktype
}
func (t *Book) GetTitle() string {
	return t.Title
}
func (t *Book) GetYear() int32 {
	return t.Year
}
func (t *Book) GetAvailable() time.Time {
	return t.Available
}
func (t *Book) GetTags() []string {
	return t.Tags
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: domains.sql

package repo

import (
	"context"

	"github.com/jackc/pgx/v5"
	"github.com/jackc/pgx/v5/pgconn"
)

type DomainDBTX interface {
	Exec(context.Context, string, ...interface{}) (pgconn.CommandTag, error)
	Query(context.Context, string, ...interface{}) (pgx.Rows, error)
	QueryRow(context.Context, string, ...interface{}) pgx.Row
}

func NewDomain(db DomainDBTX) *DomainQueries {
	return &DomainQueries{db: db}
}

type DomainQueries struct {
	db DomainDBTX
}

func (q *DomainQueries) WithTx(tx pgx.Tx) *DomainQueries {
	return &DomainQueries{
		db: tx,
	}
}

const domainGetByNo = `-- name: DomainGetByNo :one
SELECT tag, leaders, configs FROM domains where tag = $1
`

func (q *DomainQueries) DomainGetByNo(ctx context.Context, tag string) (Domain, error) {
	row := q.db.QueryRow(ctx, domainGetByNo, tag)
	var i Domain
	err := row.Scan(&i.Tag, &i.Leaders, &i.Configs)
	return i, err
}
